# -*- coding: utf-8 -*-

import pandas as pd
import numpy as np
import sklearn.ensemble as ske
from sklearn import cross_validation,tree,linear_model
from sklearn.feature_selection import SelectFromModel
from sklearn.externals import joblib
import pickle
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import confusion_matrix


data= pd.read_csv("C:\\malware-detection-machine-learning-approach-master\\data.csv",sep ='|')

data.shape


X1=data.drop(['Name','md5','legitimate'],axis=1).values  # we drop the column from main table
Y1=data['legitimate'].values

# feature selection useing Trees Classifier

feature_sel= ske.ExtraTreesClassifier()
feature_sel.fit(X1,Y1)

model= SelectFromModel(feature_sel,prefit=True)

X_new=model.transform(X1)

nb_feature = X_new.shape[1]




X_train,X_test,Y1_train,y_test=cross_validation.train_test_split(X_new,Y1,test_size=0.2)

algorithm= {
           "DecisionTree":tree.DecisionTreeClassifier(max_depth=10),
            "Randomforest":ske.RandomForestClassifier(n_estimators=50),
            "GradientBoosting":ske.GradientBoostingClassifier(n_estimators=50),
            "ADaBoost":ske.AdaBoostClassifier(n_estimators=100),
            "GNB":GaussianNB()
            }
            
            
  for algo in algorithm:
      model =algorithm[algo]
      model.fit(X_train,Y1_train)
      score_M=model.score(X_test,y_test)
      print("Algorithm {}: \n accuracy :{} ".format(algo,score_M*100))
      
                